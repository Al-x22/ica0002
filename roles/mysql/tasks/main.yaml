---
- name: Add mysql to server
  ansible.builtin.apt:
    name: mysql-server

- name: Copy file override.cnf
  ansible.builtin.template:
    src: override.cnf
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify: restart mysql
  
- name: Ensure sql is always started please
  ansible.builtin.service:
    name: mysql
    enabled: yes
    state: started
    
- name: Add python3-pymysql because it is required
  ansible.builtin.apt:
    name: python3-pymysql
    
- name: MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica
  
- name: MySQL user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    
- name: MySQL user for Exporter
  community.mysql.mysql_user:
    name: "{{ sql_exporter_user }}"
    password: "{{ sql_exporter_password }}"
    priv: "*.*:PROCESS,REPLICATION CLIENT,SELECT"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    
- name: MySQL user for Replication
  community.mysql.mysql_user:
    name: "{{ sql_repl_user }}"
    password: "{{ sql_repl_password }}"
    host: "%"
    priv: "*.*:REPLICATION SLAVE"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    
- name: Add read only mode to secondary mysql server    
  community.mysql.mysql_variables:
    variable: read_only
    value: "{{ 'OFF' if inventory_hostname == dns_cname_records[mysql_host] else 'ON' }}"
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica
    
